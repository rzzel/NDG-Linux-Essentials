The zip and unzip commands in Linux are commonly used for working with ZIP archives. Here's how to create ZIP archives, extract files from them, and some other useful features of these commands:

Creating a ZIP Archive:

To create a ZIP archive, you use the zip command followed by the archive name and the list of files to be included in the archive.
By default, zip adds files to an archive and compresses them.

Example of creating a ZIP archive:

zip alpha_files.zip alpha*

In this example, the alpha_files.zip archive is created, and files that match the alpha* pattern are added to it. The output displays the files being added and their compression ratio.

Recursing into Subdirectories:

Unlike tar, the zip command does not recurse into subdirectories by default.
To include files from subdirectories, you need to use the -r option, which indicates that recursion should be used.
Example with recursion:

zip -r School.zip School

In this example, all files under the School directory are added to the ZIP archive because the -r option is used.

Listing Files in a ZIP Archive:

To list the files in a ZIP archive, you can use the -l option with the unzip command.
This shows a list of files contained within the archive.
Example of listing files in a ZIP archive:

unzip -l School.zip

The output displays information about the files in the ZIP archive, including their sizes and timestamps.

Extracting Files from a ZIP Archive:

To extract files from a ZIP archive, you can use the unzip command.
By default, unzip extracts the files without overwriting existing ones.
Example of extracting files from a ZIP archive:

unzip School.zip

The command prompts for confirmation if any files would be overwritten. You can respond with options like 'y' for yes, 'n' for no, and others.

Avoiding Overwriting Files:

To avoid being prompted for overwriting files when extracting, you can copy the ZIP file to a different directory before extraction.
Example of extracting files without overwriting:

mkdir tmp
cp School.zip tmp/School.zip
cd tmp
unzip School.zip

By copying the ZIP file to a new directory and then extracting it, you ensure that no files are overwritten.

Extracting Specific Files:

To extract specific files from a ZIP archive, you can provide the filenames as arguments to the unzip command.
Examples of extracting specific files:

unzip School.zip linux.txt
unzip School.zip School/Math/numbers.txt
unzip School.zip School/Art/*t

In these examples, you can see how to extract files by specifying their names or using patterns.

Both zip and unzip have additional features, such as replacing files within an archive, using different compression levels, and enabling encryption. You can refer to the man pages for zip and unzip for detailed documentation on these commands.
