The chown command in Linux is used to change the ownership of files and directories. The basic syntax of the chown command is as follows:

chown [OPTIONS] USER[:GROUP] FILE...

Here, USER is the new owner, GROUP is the new group (optional), and FILE is the file or directory whose ownership is to be changed.

Let's break down the command examples you provided:

Change user ownership of a file:

root@localhost:~# chown jane /tmp/filetest1
root@localhost:~# ls -l /tmp/filetest1
-rw-rw-r-- 1 jane sysadmin 0 Dec 19 18:44 /tmp/filetest1

This command changes the user ownership of /tmp/filetest1 to the user jane. The -rw-rw-r-- part of the output indicates the permissions of the file, and jane is now the owner.

Change both user and group ownership of a file:

root@localhost:~# chown jane:users /tmp/filetest2
root@localhost:~# ls -l /tmp/filetest2
-rw-r--r-- 1 jane users 0 Dec 19 18:53 /tmp/filetest2

This command changes both the user ownership to jane and the group ownership to users for the file /tmp/filetest2.

Change group ownership of a file (without changing the user):

jane@localhost:~$ chown .users /tmp/filetest1
jane@localhost:~$ ls -l /tmp/filetest1
-rw-rw-r-- 1 jane users 0 Dec 19 18:44 /tmp/filetest1

This command changes only the group ownership of /tmp/filetest1 to the group users. The user ownership remains the same (jane).

It's important to note that only the root user has the privilege to change the user ownership of a file to another user. Regular users can use chown to change the group ownership of their files or directories.

Also, the chown command provides various options that allow you to recursively change ownership, preserve the root directory's ownership, and more. You can explore these options by checking the manual pages (man chown).
