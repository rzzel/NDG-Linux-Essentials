When modifying user accounts, it's essential to consider that certain changes may not take effect immediately if the user is currently logged in. Understanding the status of user sessions and who is logged in can help manage these changes more effectively. Commands like who, w, and last are valuable for obtaining information about current and past user sessions.

Here's a summary of the commands mentioned:

who: Displays information about users who are currently logged in, showing their username, terminal, login time, and originating IP address.

who

w: Similar to who but provides more detailed information, including system uptime and load, as well as the processes each user is running.

w

last: Displays information about user logins and system reboots, including usernames, terminal names, IP addresses, and login times. Can be filtered by providing a username or terminal name.

last
last username

When it comes to modifying user accounts, the usermod command is a powerful tool. Here's a summary of some useful options:

Short Option	Long Option	Description
-c	--comment	Sets the value of the GECOS or comment field to COMMENT.
-d	--home HOME_DIR	Sets HOME_DIR as a new home directory for the user.
-e	--expiredate EXPIRE_DATE	Set account expiration date to EXPIRE_DATE.
-f	--inactive INACTIVE	Set account to permit login for INACTIVE days after password expires.
-g	--gid GROUP	Set GROUP as the primary group.
-G	--groups GROUPS	Set supplementary groups to a list specified in GROUPS.
-a	--append	Append the user's supplemental groups with those specified by the -G option.
-h	--help	Show the help for the usermod command.
-l	--login NEW_LOGIN	Change the user's login name.
-L	--lock	Lock the user account.
-s	--shell SHELL	Specify the login shell for the account.
-u	--uid NEW_UID	Specify the user's UID to be NEW_UID.
-U	--unlock	Unlock the user account.
Some noteworthy points:

Changing the user's UID with the -u option can be problematic as it may orphan files owned by the user.
Specifying a new login name with -l does not orphan files.
Locking an account with -L prevents it from being used but retains ownership of files.
Be cautious when managing supplementary groups with -G to avoid accidentally removing a user from existing groups.

For example, to add the user "jane" to the "development" group:

root@localhost:~# usermod -aG development jane
