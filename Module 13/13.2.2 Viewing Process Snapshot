The ps command in Linux is a versatile tool for listing and providing detailed information about running processes. By default, when you run the ps command without any options, it shows only the processes running in the current shell session, which may include the ps command itself.

Here's a summary of how you can use the ps command to view and filter process information:

Default ps Command: When you run ps without any options, it displays basic information about the processes running in the current shell session, including their Process IDs (PIDs), controlling terminals (TTY), cumulative execution time (TIME), and command names (CMD).

Process Tree (--forest) Option: To display processes in a hierarchical format, indicating parent-child relationships, use the --forest option with ps. This format helps you visualize the structure of the process tree with each parent process and its child processes.

View All Processes: To view all processes running on the system, use the ps aux or ps -ef commands. These commands list all processes running on the system along with various details such as the user, CPU and memory usage, and process details.

Filtering with grep: You can filter the output of the ps command by using grep with specific keywords to search for processes matching those keywords. For example, to filter for a specific process name like "firefox," use ps -e | grep firefox.

Sending Output to a Pager: If the process list is extensive, you can pipe the output of the ps command to a pager like less to make it more manageable. For instance, ps aux | less allows you to scroll through the process list in a controlled way.

View Processes of a Specific User: To view the processes of a specific user, use the -u option followed by the username. For example, ps -u root shows the processes for the "root" user. This can be helpful for administrators who need to monitor or manage a particular user's processes.

The ps command provides detailed insights into running processes, making it a valuable tool for monitoring system performance, diagnosing issues, and tracking the behavior of processes. By using various options and filters, you can tailor the output to your specific needs, whether you want to inspect individual processes, view a process tree, or explore the entire process space on your system.
